#include <stdio.h>
#include <string.h>

#define MAX_CONTACTS 100
#define MAX_LEN 50

// Structure pour un contact
typedef struct {
    char nom[MAX_LEN];
    char telephone[MAX_LEN];
    char email[MAX_LEN];
} Contact;

// Variables globales
Contact contacts[MAX_CONTACTS];
int nbContacts = 0;

// Fonction pour ajouter un contact
void ajouterContact() {
    if (nbContacts >= MAX_CONTACTS) {
        printf("Carnet plein ! Impossible d'ajouter un nouveau contact.\n");
        return;
    }
    printf("Nom: ");
    scanf(" %[^\n]", contacts[nbContacts].nom);
    printf("Numéro de téléphone: ");
    scanf(" %[^\n]", contacts[nbContacts].telephone);
    printf("Adresse e-mail: ");
    scanf(" %[^\n]", contacts[nbContacts].email);

    nbContacts++;
    printf("Contact ajouté avec succès.\n");
}

// Fonction pour afficher tous les contacts
void afficherContacts() {
    if (nbContacts == 0) {
        printf("Aucun contact à afficher.\n");
        return;
    }
    printf("\n--- Liste des contacts ---\n");
    for (int i = 0; i < nbContacts; i++) {
        printf("Nom: %s\n", contacts[i].nom);
        printf("Téléphone: %s\n", contacts[i].telephone);
        printf("E-mail: %s\n", contacts[i].email);
        printf("-----------------------\n");
    }
}

// Fonction pour rechercher un contact par nom
int rechercherContact(char nom[]) {
    for (int i = 0; i < nbContacts; i++) {
        if (strcmp(contacts[i].nom, nom) == 0) {
            return i; // retourne l'index du contact
        }
    }
    return -1; // non trouvé
}

// Fonction pour modifier un contact
void modifierContact() {
    char nom[MAX_LEN];
    printf("Entrez le nom du contact à modifier: ");
    scanf(" %[^\n]", nom);

    int idx = rechercherContact(nom);
    if (idx == -1) {
        printf("Contact non trouvé.\n");
        return;
    }

    printf("Nouveau numéro de téléphone: ");
    scanf(" %[^\n]", contacts[idx].telephone);
    printf("Nouvelle adresse e-mail: ");
    scanf(" %[^\n]", contacts[idx].email);

    printf("Contact modifié avec succès.\n");
}

// Fonction pour supprimer un contact
void supprimerContact() {
    char nom[MAX_LEN];
    printf("Entrez le nom du contact à supprimer: ");
    scanf(" %[^\n]", nom);

    int idx = rechercherContact(nom);
    if (idx == -1) {
        printf("Contact non trouvé.\n");
        return;
    }

    // Décaler tous les contacts suivants vers la gauche
    for (int i = idx; i < nbContacts - 1; i++) {
        contacts[i] = contacts[i + 1];
    }
    nbContacts--;
    printf("Contact supprimé avec succès.\n");
}

// Fonction principale avec menu
int main() {
    int choix;

    do {
        printf("\n=== Gestion de Contacts ===\n");
        printf("1. Ajouter un contact\n");
        printf("2. Modifier un contact\n");
        printf("3. Supprimer un contact\n");
        printf("4. Afficher tous les contacts\n");
        printf("5. Rechercher un contact\n");
        printf("0. Quitter\n");
        printf("Votre choix: ");
        scanf("%d", &choix);

        switch (choix) {
            case 1:
                ajouterContact();
                break;
            case 2:
                modifierContact();
                break;
            case 3:
                supprimerContact();
                break;
            case 4:
                afficherContacts();
                break;
            case 5: {
                char nom[MAX_LEN];
                printf("Entrez le nom du contact à rechercher: ");
                scanf(" %[^\n]", nom);
                int idx = rechercherContact(nom);
                if (idx == -1) {
                    printf("Contact non trouvé.\n");
                } else {
                    printf("Nom: %s\n", contacts[idx].nom);
                    printf("Téléphone: %s\n", contacts[idx].telephone);
                    printf("E-mail: %s\n", contacts[idx].email);
                }
                break;
            }
            case 0:
                printf("Au revoir !\n");
                break;
            default:
                printf("Choix invalide. Veuillez réessayer.\n");
        }

    } while (choix != 0);

    return 0;
}
